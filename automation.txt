Mechanics|Description|Score
Automation| The automation line Go to work, machine. CT literature addresses automation as making computers (referring to our modern machines) do the work for us (BOCCONI et al., 2016; LEE et al., 2011) or using computers as tools (BARR; STEPHENSON, 2011; YADAV et al., 2014). Sometimes, they are more specific, spotting that the work left for the computers are repetitive or tedious tasks (ISTE; CSTA, 2011). We agree those are good examples of the automation process, but we are going to define automation in a broader way. Term 17 – Automation: The process of granting autonomy. Decreasing dependency of your guidance. Autonomy. One might feel weird about this term, since when we automate something, we are not delivering it free will, it is not going to decide what to do by itself, it will follow our rules. Think that when something is autonomous it does not ask for directions, it automatically does something based on its own rules. The tricky part is that we are the ones who define which rules are those to be followed by the automated being. We define their rules, and then grant them autonomy. Ultimately, the autonomy granted is so great it can redefine its own rules, something we could expect from a strong AI. It is very likely that you will hear from computer scientists or programmers that computer machines are incredibly dumb and we must tell them every single thing they must do, precisely and exactly. We correct this statement: someone must have told them at some point in time, not us, as the final users. Our smartphones or desktops have several layers of autonomy, they do not ask us which process should go in which core or which video encoding strategy it should use to record. In fact, sometimes they do not even ask us if we want to update them. Automation freed them and us from the torment of being constantly annoyed by questions about what to do. Automatic life. We can bring Automation to living beings, even to ourselves, internally. Think of a new intern that every time he/she receives a new spreadsheet, he/she asks you what to do with it. Teaching him how to classify the spreadsheets and send them to their respective archives turn this process automatic to you. New spreadsheets are going to the right archives without the need of any further action from you. Internally, anything that starts to be made unconsciously was automated, like riding a bike, your legs move accordingly without the need of thinking or planning their exact movements. Let us say that an order is about what you want to be done and an instruction is about how you want to get it done, then Automation is about instructing, not ordering. Aside from simple mechanical devices, instructions are the key of Automation, that being said, Algorithms are close friends. Remember the most special feature of Algorithms, non-ambiguity, if you pass ambiguous instructions, you may have undesired automated solutions. Use of technology. SELBY; WOOLLARD (2014) defines automation as “an implementation of abstractions by computing devices”. For MANNILA et al. (2014), it is “recognizing ways in which technology can help us accomplish tasks that would otherwise be too repetitive, unfeasible or difficult”. LEE et al. (2011) says “Automation is a labor saving process in which a computer is instructed to execute a set of repetitive tasks quickly and efficiently compared to the processing power of a human”. Those definitions look back to the first face of (General) Computational Thinking, the use of CS products. We highlight that computer machines do benefit the most from Automation so far. It is completely out of scale how much machines outperform humans in repetitive well-defined tasks. But the key to benefit from this high performance is by letting them running with as less of dependence of our interventions as possible. Tool makers. Some papers directly mention (VOOGT et al., 2015; BOCCONI et al., 2016; LEE et al., 2011), and in many others it can be inferred, that the creation of artifacts, software (as games and apps) and hardware (as robots and small electronic projects), is part of CT. If instead of creating artifacts in general, we talk about creating tools, which help us creating things, then we may fit those abilities in this CT line. Through the lens of Automation, the more automatic a tool is, the better. Beyond tools, other artifacts that significantly involve Automation are any self-contained ones, such as games, systems and simulations. Given that creating software applications are generally a fairly different process with respect to creating hardware, we are naming those processes developing and tinkering, respectively. Simulation. It can be seen as a huge crossing of all CT major lines, but we are highlighting simulation here because its core idea is letting it run on its own, to further analyze it and then relate to the real thing. Simulations enable us to predict natural phenomena by imitating it in a controlled context where we usually can isolate variables, set different conditions, the time rate, and all those things that we do not stand much control over in the real world. It is noteworthy that using simulations may be a lot closer to data visualization, while designing simulations are closer to automation. Automation in CS. The understanding of the huge gap between human and machine performances in certain tasks is the major distinction of Automation in CS. The fast scripts routinely used by CS professionals to search or create pattern-based simple files reveals this awareness. Knowing that millions and millions of a calculation that would take us years, if ever, to complete is done in a matter of seconds by the machine. But also knowing that no matter how much time you give to it, the machine is not going to conceptualize a good scene for a fantasy illustration. Unless a new deep neural network solution get designed and successfully claim those feats, then we will be entering in a new era of automation. Examples. Figure 11 illustrates the main concepts discussed in this subsection: order, instruction, development, tinkering, automated effort and simulation. In the sequence, a frame shows examples of what is included in the CT Line of Data: (CTS) Topics such as volcanism simulations in geography classes and cooperative activities/games (potentially order/instruction) in physical education classes; (CTS) Expressions such as building robots (tinkering) and creating virtual games (development and potentially simulation); and (CTS) Sensibility(ies) such as realizing autonomous alternatives. Topics – Automation: ; (Geography) Volcanism Simulations ; (Biology) Cultivation ; (Physical Education) Cooperative Activities/Games Expressions – Automation: ; Building Robots ; Creating Virtual Games ; Providing Instructions ; Replacing own effort with tools Sensibilities – Automation: ; Realizing autonomous alternatives ; Spotting tool usage opportunities.|0