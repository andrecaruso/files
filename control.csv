Control Patient | We see that abstraction is mainly treated as a thought process, which usually transfers information from one context to another, creating a contrast (particular-general, concrete-abstract, complex-simple). As exalted by its etymology, it conveys the idea of ​​drawing, borrowing, capturing something. But not a real object that captures information, a set of functions. In the CT literature, this focuses on capturing essence, leaving unnecessary detail and, in other approaches, on acquiring common characteristics. In addition to capturing functionality, we see that this process sometimes retains a connection to the original object, sometimes it is discarded entirely, so we'll make a distinction by creating two terms: flat abstraction, it's just a representation , short/simple/simple way of referring to something longer/more complex, the details of which are not needed at this time; and a deep abstraction that no longer represents something, but only captures a few features of it and becomes something of its own, simpler than the origin. The line of abstraction is illustrated in Figure 3, showing the concepts involved using the examples of cubes, cubes, and polygons. Abstraction can only be used to represent something simpler (shallow abstraction); or to arrive at a proprietary concept (deep abstraction) by extracting a subset of features from a more complex concrete object. Abstractions can extract features from other abstractions, creating layers of abstraction where the top contains less detail with simple, abstract objects, while the bottom contains more detail with complex, concrete objects. Because of this feature extraction property, the abstraction is about pattern recognition, which can be thought of as finding the same features (e.g. displaying a number on each side) on multiple objects. This also refers to generalization, represented by red arrows naming the abstraction made up of the features extracted from the multiple objects crossed by the arrow.|0